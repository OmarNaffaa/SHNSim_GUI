<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>